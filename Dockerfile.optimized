# 多阶段构建：第一阶段 - 构建环境
FROM python:3.9-slim as builder

WORKDIR /app

# 安装构建依赖
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# 复制依赖文件
COPY requirements_pytorch.txt ./requirements.txt

# 创建虚拟环境并安装依赖
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# 安装轻量版PyTorch (CPU only)
RUN pip install --no-cache-dir torch==2.0.1+cpu torchvision==0.15.2+cpu -f https://download.pytorch.org/whl/torch_stable.html

# 安装其他依赖（排除torch和torchvision）
RUN pip install --no-cache-dir \
    flask==2.3.3 \
    ultralytics==8.0.196 \
    opencv-python-headless==4.8.1.78 \
    numpy==1.24.3 \
    pillow==10.0.1 \
    gunicorn==21.2.0 \
    python-dotenv==1.0.0 \
    requests==2.31.0

# 第二阶段 - 运行环境
FROM python:3.9-slim

WORKDIR /app

# 安装运行时依赖（最小化）
RUN apt-get update && apt-get install -y \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libgomp1 \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# 复制虚拟环境
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# 复制应用代码和模型
COPY app_pytorch.py ./app.py
COPY models/best.pt ./models/best.pt

# 设置环境变量
ENV MODEL_PATH=/app/models/best.pt
ENV PORT=5000
ENV PYTHONUNBUFFERED=1

# 非root用户
RUN useradd --create-home --shell /bin/bash app \
    && chown -R app:app /app
USER app

# 暴露端口
EXPOSE $PORT

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:$PORT/health || exit 1

# 启动命令
CMD ["gunicorn", "--bind", "0.0.0.0:5000", "--workers", "1", "--timeout", "120", "--max-requests", "1000", "app:app"] 